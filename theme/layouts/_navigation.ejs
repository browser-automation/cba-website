<% const headerMenuItems = ["documentation", "tutorial", "ready-projects", "what's-new"];
const flyoutPages = site.queryPages(({originalPathname}) => headerMenuItems.includes(originalPathname.split('/')[0]));

function getSubPages(nav)
{
  const subPages = query(({originalPathname}) => {
    const parentPath = `${nav.originalPathname}/`;
    return originalPathname.startsWith(parentPath) &&
           !(originalPathname.substring(parentPath.length).includes("/"));
  });
  if (subPages.length) {
    if (!nav.sub_items){
      nav.sub_items = [];
      for (const subPage of subPages) {
        nav.sub_items.push(subPage);
        getSubPages(subPage);
      }
    }
};

let newNavigation = [];
function recData (navigPath) {
  
for (const {title, pathname, child} of navigPath) {
  let newObj = {};
  let newChild = [];
  if (child) {
    if(newNavigation.find(elem => elem.title == title)){
      continue;
    };
    filtered = navigation.filter(elem => elem.title == title);
    for (const elem of filtered) {
      if(elem.child) {
        //filtered2 = filtered.filter(elem => elem.child[0] == el.child[0]);
        newChild.push(elem.child);
    }
  }
    obj = {title, pathname, newChild};
  newNavigation.push(obj);
  }
  }
};
recData(navigation);
%>

 <nav id="main-navigation">
  <% function recNav(navig) { %>
    <ul>
      <% for ({title, pathname, sub_items} of navig) { %>
        <li <%- sub_items ? "class='has-children'" : "" %>>
          <a href="/<%= pathname %>"><%= title %></a>
            <% if (sub_items) { %>
              <% recNav(sub_items);
            } %>
        </li>
      <% } %>
    </ul>
  <% }
  recNav(newNavigation) %>
</nav>

<nav id="mobile-nav">
<select>
   <% for ({title, link, sub_items} of site.navigation) { %>
      <option value="<%- link %>"><%- title %></option>
    <% } %>
</select>
</nav>
